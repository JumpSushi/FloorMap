import {
  require_theme_provider
} from "./chunk-NQYGMLAN.js";
import "./chunk-4UGQLU7J.js";
import "./chunk-KTP3BVTT.js";
import {
  esm_exports,
  init_esm
} from "./chunk-67R2RD5B.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-VRMXEQCD.js";

// node_modules/remix-themes/build/theme-server.js
var require_theme_server = __commonJS({
  "node_modules/remix-themes/build/theme-server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createThemeSessionResolver = void 0;
    var theme_provider_1 = require_theme_provider();
    var createThemeSessionResolver = (cookieThemeSession) => {
      const resolver = async (request) => {
        const session = await cookieThemeSession.getSession(request.headers.get("Cookie"));
        return {
          getTheme: () => {
            const themeValue = session.get("theme");
            return (0, theme_provider_1.isTheme)(themeValue) ? themeValue : null;
          },
          setTheme: (theme) => session.set("theme", theme),
          commit: () => cookieThemeSession.commitSession(session),
          destroy: () => cookieThemeSession.destroySession(session)
        };
      };
      return resolver;
    };
    exports.createThemeSessionResolver = createThemeSessionResolver;
  }
});

// node_modules/remix-themes/build/create-theme-action.js
var require_create_theme_action = __commonJS({
  "node_modules/remix-themes/build/create-theme-action.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createThemeAction = void 0;
    var server_runtime_1 = (init_esm(), __toCommonJS(esm_exports));
    var theme_provider_1 = require_theme_provider();
    var createThemeAction = (themeSessionResolver) => {
      const action = async ({ request }) => {
        const session = await themeSessionResolver(request);
        const { theme } = await request.json();
        if (!theme) {
          return (0, server_runtime_1.json)({ success: true }, { headers: { "Set-Cookie": await session.destroy() } });
        }
        if (!(0, theme_provider_1.isTheme)(theme)) {
          return (0, server_runtime_1.json)({
            success: false,
            message: `theme value of ${theme} is not a valid theme.`
          });
        }
        session.setTheme(theme);
        return (0, server_runtime_1.json)({ success: true }, {
          headers: { "Set-Cookie": await session.commit() }
        });
      };
      return action;
    };
    exports.createThemeAction = createThemeAction;
  }
});

// node_modules/remix-themes/build/index.js
var require_build = __commonJS({
  "node_modules/remix-themes/build/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createThemeAction = exports.PreventFlashOnWrongTheme = exports.isTheme = exports.Theme = exports.themes = exports.useTheme = exports.ThemeProvider = exports.createThemeSessionResolver = void 0;
    var theme_server_1 = require_theme_server();
    Object.defineProperty(exports, "createThemeSessionResolver", { enumerable: true, get: function() {
      return theme_server_1.createThemeSessionResolver;
    } });
    var theme_provider_1 = require_theme_provider();
    Object.defineProperty(exports, "ThemeProvider", { enumerable: true, get: function() {
      return theme_provider_1.ThemeProvider;
    } });
    Object.defineProperty(exports, "useTheme", { enumerable: true, get: function() {
      return theme_provider_1.useTheme;
    } });
    Object.defineProperty(exports, "themes", { enumerable: true, get: function() {
      return theme_provider_1.themes;
    } });
    Object.defineProperty(exports, "Theme", { enumerable: true, get: function() {
      return theme_provider_1.Theme;
    } });
    Object.defineProperty(exports, "isTheme", { enumerable: true, get: function() {
      return theme_provider_1.isTheme;
    } });
    Object.defineProperty(exports, "PreventFlashOnWrongTheme", { enumerable: true, get: function() {
      return theme_provider_1.PreventFlashOnWrongTheme;
    } });
    var create_theme_action_1 = require_create_theme_action();
    Object.defineProperty(exports, "createThemeAction", { enumerable: true, get: function() {
      return create_theme_action_1.createThemeAction;
    } });
  }
});
export default require_build();
//# sourceMappingURL=remix-themes.js.map
